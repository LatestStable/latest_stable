#!/usr/bin/env ruby

require 'bundler'

def parse_lockfile(lockfile = File.read('Gemfile.lock'))
  Hash[lockfile.each_line.map do |line|
    if md = line.match(/\A {4}(?<gem_name>\S+) \((?<version>[^)]+)\)/)
      [md[:gem_name], md[:version]]
    end
  end.compact]
end

def reset_gemfile(lockfile)
  File.open('Gemfile.lock', 'w') do |file|
    file.write(lockfile)
  end
end

old_lockfile = File.read('Gemfile.lock')
old_gemspecs = parse_lockfile(old_lockfile)
Bundler.with_clean_env { `bundle update` }
new_gemspecs = parse_lockfile

updated_gems = (old_gemspecs.keys + new_gemspecs.keys).uniq.select do |gem_name|
  old_gemspecs[gem_name] != new_gemspecs[gem_name]
end

if updated_gems.empty?
  puts 'Already on latest stable'
else
  updated_gems.each do |gem_name|
    if old_gemspecs.key?(gem_name) && new_gemspecs.key?(gem_name)
      puts "Updated '#{gem_name}' from #{old_gemspecs[gem_name]} to #{new_gemspecs[gem_name]}"
    elsif old_gemspecs.key?(gem_name)
      puts "Removed '#{gem_name}'" # TODO specs
    else
      puts "Added '#{gem_name}' #{new_gemspecs[gem_name]}"
    end
  end

  `rake test`
  if $?.exitstatus == 0
    puts 'success'
  else
    puts 'Tests failed'
    reset_gemfile(old_lockfile)
  end
end
